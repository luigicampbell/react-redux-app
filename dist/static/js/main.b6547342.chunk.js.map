{"version":3,"sources":["components/layout/SignedInLinks.js","store/actions/authActions.js","components/layout/SignedOutLinks.js","components/layout/Navbar.js","components/dashboard/Notifications.js","components/projects/ProjectSummary.js","components/projects/ProjectList.js","components/dashboard/Dashboard.js","components/projects/ProjectDetails.js","components/auth/SignIn.js","components/auth/SignUp.js","components/projects/CreateProject.js","store/actions/projectActions.js","App.js","serviceWorker.js","store/reducers/authReducer.js","store/reducers/projectReducer.js","store/reducers/rootReducer.js","config/fbConfig.js","index.js"],"names":["connect","dispatch","signOut","getState","_ref2","getFirebase","auth","then","type","props","react_default","a","createElement","className","NavLink","to","onClick","href","profile","initials","SignedOutLinks","state","console","log","firebase","links","uid","layout_SignedInLinks","layout_SignedOutLinks","Link","Notifications","notifications","map","notification","key","id","user","content","moment","time","toDate","fromNow","ProjectSummary","_ref","project","title","authorFirstName","authorLastName","createdAt","calendar","ProjectList","projects","components_projects_ProjectSummary","Dashboard","_this$props","this","projects_ProjectList","dashboard_Notifications","Redirect","Component","compose","firestore","ordered","firestoreConnect","collection","orderBy","limit","ownProps","match","params","data","authorLasName","SignIn","email","password","handleChange","e","_this","setState","Object","defineProperty","target","value","handleSubmit","preventDefault","signIn","authError","onSubmit","htmlFor","autoComplete","onChange","creds","credentials","signInWithEmailAndPassword","catch","err","SignUp","firstName","lastName","signUp","newUser","_ref3","getFirestore","createUserWithEmailAndPassword","res","doc","set","CreateProject","createProject","history","push","authorId","add","objectSpread","Date","App","BrowserRouter","layout_Navbar","Switch","Route","exact","path","component","ProjectDetails","Boolean","window","location","hostname","initState","authReducer","arguments","length","undefined","action","message","projectReducer","rootReducer","combineReducers","firestoreReducer","firebaseReducer","initializeApp","apiKey","authDomain","databaseURL","projectId","storageBucket","messagingSenderId","settings","timestampsInSnapshots","store","createStore","applyMiddleware","thunk","withExtraArgument","reduxFirestore","fbConfig","reactReduxFirebase","useFirestoreForProfile","userProfile","attachAuthIsReady","firebaseAuthIsReady","ReactDOM","render","es","src_App","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.b6547342.chunk.js","sourcesContent":["import React from 'react';\nimport { NavLink } from 'react-router-dom';\nimport { connect } from 'react-redux';\nimport { signOut } from '../../store/actions/authActions';\n\nconst SignedInLinks = (props) => {\n    return (\n        <ul className=\"right\">\n            <li><NavLink to='/create'>New Project</NavLink></li>\n            <li><a onClick={ props.signOut } href=\"/signin\">Log Out</a></li>\n            <li><NavLink to='/' className='btn btn-floating pink lighten-1'>{ props.profile.initials }</NavLink></li>\n        </ul>\n    );\n};\n\nconst mapDispatchToProps = (dispatch) => {\n    return {\n        signOut: () => dispatch( signOut() )\n    };\n};\n\nexport default connect(null, mapDispatchToProps)(SignedInLinks);\n","export const signIn = (credentials) => {\n    return (dispatch, getState, { getFirebase }) => {\n        const firebase = getFirebase();\n\n        firebase.auth().signInWithEmailAndPassword(\n            credentials.email,\n            credentials.password\n        ).then( () => {\n            dispatch({\n                type: 'LOGIN_SUCCESS'\n            });\n        }).catch( (err) => {\n            dispatch({\n                type: 'LOGIN_ERROR', err\n            });\n        });\n    };\n};\n\nexport const signOut = () => {\n    return (dispatch, getState, { getFirebase }) => {\n        const firebase = getFirebase();\n        firebase.auth().signOut().then( () => {\n            dispatch({ type: 'SIGNOUT_SUCCESS '})\n        });\n    };\n};\n\nexport const signUp = (newUser) => {\n    return (dispatch, getState, { getFirebase, getFirestore }) => {\n        const firebase = getFirebase();\n        const firestore = getFirestore();\n\n        firebase.auth().createUserWithEmailAndPassword(\n            newUser.email,\n            newUser.password\n        ).then( (res) => {\n            return firestore.collection('users').doc(res.user.uid).set({\n                firstName: newUser.firstName,\n                lastName: newUser.lastName,\n                initials: newUser.firstName[0] + newUser.lastName[0]\n            });\n        }).then( () => {\n            dispatch({ type: 'SIGNUP_SUCCESS' });\n        }).catch( (err) => {\n            dispatch({ type: 'SIGNUP_ERROR', err });\n        });\n    };\n};\n","import React from 'react';\nimport { NavLink } from 'react-router-dom';\n\nconst SignedOutLinks = () => {\n    return (\n        <ul className=\"right\">\n            <li><NavLink to='/signup'>Signup</NavLink></li>\n            <li><NavLink to='/signin'>Login</NavLink></li>\n        </ul>\n    );\n};\n\nexport default SignedOutLinks;\n","import React from 'react';\nimport { Link } from 'react-router-dom';\nimport SignedInLinks from './SignedInLinks';\nimport SignedOutLinks from './SignedOutLinks';\nimport { connect } from 'react-redux';\n\nconst Navbar = (props) => {\n    const { auth, profile } = props;\n    // console.log(auth);\n    const links = auth.uid ? <SignedInLinks profile={ profile }/> : <SignedOutLinks />;\n    return (\n        <nav className=\"nav-wrapper grey darken-3\">\n            <div className=\"container\">\n               <Link to='/' className=\"brand-logo\">Irms + Luigi</Link>\n                { links }\n            </div>\n        </nav>\n    ); // Materialize Class\n};\n\nconst mapStateToProps = (state) => {\n    console.log(state);\n    return {\n        auth: state.firebase.auth,\n        profile: state.firebase.profile\n    };\n};\n\nexport default connect(mapStateToProps)(Navbar);\n","import React from 'react';\nimport moment from 'moment';\n\nconst Notifications = (props) => {\n    const{ notifications } = props;\n    return (\n        <div>\n            <div className=\"section\">\n                <div className=\"card z-depth-1\">\n                    <div className=\"card-content\">\n                        <span className=\"card-title\">Notifications</span>\n                        <ul className=\"notifications\">\n                            { notifications && notifications.map( (notification)=> {\n                                    return (\n                                        <li key={ notification.id }>\n                                            <span className=\"pink-text\">{ notification.user } </span>\n                                            <span>{ notification.content }</span>\n                                            <div className=\"grey-text note-date\">\n                                                { moment( notification.time.toDate() ).fromNow() }\n                                            </div>\n                                        </li>\n                                    );\n                                }) \n                            }\n                        </ul>\n                    </div>\n                </div>\n            </div>\n        </div>\n    );\n};\n\nexport default Notifications;\n","import React from 'react';\nimport './ProjectSummary.css';\nimport moment from 'moment';\n\nconst ProjectSummary = ({ project }) => {\n    return (\n        <div className=\"card z-depth-0 project-summary opac\">\n            <div className=\"boxshadow card-content grey-text text-darken-3\">\n                <span className=\"card-title\">{ project.title }</span>\n                <p>Posted by { project.authorFirstName } { project.authorLastName }</p>\n                <p className=\"grey-text\">{ moment( project.createdAt.toDate() ).calendar() }</p>\n            </div>\n        </div>\n    );\n}\n\nexport default ProjectSummary;\n","import React from 'react';\nimport ProjectSummary from './ProjectSummary';\nimport { Link } from 'react-router-dom';\nconst ProjectList = ({ projects }) => {\n    return (\n        <div className=\"project-list section\">\n            { projects && projects.map(project => {\n                return (\n                    <Link to={'/project/' + project.id } key={project.id}>\n                        <ProjectSummary project={ project } />\n                    </Link>\n                );                \n            })}\n        </div>\n    );\n}\n\nexport default ProjectList;","import React, { Component } from 'react';\nimport Notifications from './Notifications';\nimport ProjectList from '../projects/ProjectList';\nimport { connect } from 'react-redux';\nimport { firestoreConnect } from 'react-redux-firebase';\nimport { compose } from 'redux';\nimport { Redirect } from 'react-router-dom';\n\nclass Dashboard extends Component {\n    render() {\n        // console.log(this.props);\n        const { projects, auth, notifications } = this.props;\n        if(!auth.uid) return <Redirect to='/signin' />;\n        return (\n            <div className=\"dashboard container\">\n                <div className=\"row\">\n                    <div className=\"col s12 m6\">\n                        <ProjectList projects={ projects }/>\n                    </div>\n                    <div className=\"col s12 m5 offset-m1\">\n                        <Notifications notifications={ notifications }/>\n                    </div>\n                </div>\n\n            </div>\n        );\n    }\n}\n\nconst mapStateToProps = (state) => {\n    console.log(state);\n    \n    return {\n        projects: state.firestore.ordered.projects,\n        auth: state.firebase.auth,\n        notifications: state.firestore.ordered.notifications    \n    };\n};\n\nexport default compose(\n    connect(mapStateToProps),\n    firestoreConnect([\n        { collection: 'projects', orderBy: ['createdAt', 'desc'] },\n        { collection: 'notifications', limit: 5, orderBy: ['time', 'desc'] }\n    ])\n)(Dashboard);\n","import React from 'react';\nimport { connect } from 'react-redux';\nimport { firestoreConnect } from 'react-redux-firebase';\nimport { compose } from 'redux';\nimport { Redirect } from 'react-router-dom';\nimport moment from 'moment';\n\nconst ProjectDetails = (props) => {\n  // console.log(props); \n  // being passed automatically by Route from URL and match attribute holds the params\n  const { project, auth } = props;\n  if(!auth.uid) return <Redirect to='/signin' />;\n  \n  if (project) {\n    return (\n      <div className=\"container section project-details\">\n        \n        <div className=\"card z-depth-0\">\n          \n          <div className=\"card-content\">\n            <span className=\"card-title\">{ project.title }</span>\n            <p>{ project.content }</p>\n          </div>\n\n          <div className=\"card-action grey lighten-4 grey-text\">\n            <div>Posted by { project.authorFirstName } { project.authorLasName }</div>\n            <div>{ moment( project.createdAt.toDate() ).calendar() }</div>\n          </div>\n        </div>\n        \n      </div>\n    );\n  } else{\n    return (\n      <div className=\"container center\">\n        <p>Loading project...</p>\n      </div>\n    );\n  }\n}\n\nconst mapStateToProps = (state, ownProps) => {\n  const id = ownProps.match.params.id;\n  const projects = state.firestore.data.projects;\n  const project = projects ? projects[id] : null\n\n  return {\n    project: project,\n    auth: state.firebase.auth\n  };\n};\n\nexport default compose(\n  connect(mapStateToProps),\n  firestoreConnect([\n    { collection: 'projects'}\n  ])\n)(ProjectDetails);\n","import React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport { signIn } from '../../store/actions/authActions' ;\nimport { Redirect } from 'react-router-dom';\n\nclass SignIn extends Component {\n    state = {\n        email: '',\n        password: ''\n    };\n\n    handleChange = (e) => {\n        console.log(e);\n        this.setState({\n            [e.target.id]: e.target.value\n        });\n    }\n\n    handleSubmit = (e) => {\n        e.preventDefault();\n        this.props.signIn(this.state);\n    }\n\n    render() {\n        const{ authError, auth } = this.props;\n        if(auth.uid) return <Redirect to='/' />\n        return (\n            <div className=\"container\">\n                <form onSubmit={ this.handleSubmit } className=\"white\">\n                    <h5 className=\"grey-text text-darken-3\">Sign In</h5>\n                    <div className=\"input-field\">\n                        <label htmlFor=\"email\">Email</label>\n                        <input type=\"email\" id=\"email\" autoComplete=\"email\" onChange={ this.handleChange } />\n                    </div>\n                    <div className=\"input-field\">\n                        <label htmlFor=\"password\">Password</label>\n                        <input type=\"password\" id=\"password\" autoComplete=\"current-password\" onChange={ this.handleChange } />\n                    </div>\n                    <div className=\"input-field\">\n                        <button className=\"btn pink lighten-1 z-depth-1 waves-effect waves-light\">\n                            Login\n                        </button>\n                        <div className=\"red-text center\">\n                            { authError ? <p>{ authError }</p> : null }\n                        </div>\n                    </div>\n                </form>\n            </div>\n        );\n    }\n}\n\nconst mapStateToProps = (state) => {\n    return {\n        authError: state.auth.authError,\n        auth: state.firebase.auth\n    };\n};\n\nconst mapDispatchToProps = (dispatch) => {\n    return {\n        signIn: (creds) => dispatch(signIn(creds))\n    };\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(SignIn);\n","import React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport { Redirect } from 'react-router-dom';\nimport { signUp } from '../../store/actions/authActions';\n\nclass SignUp extends Component {\n    state = {\n        firstName: '',\n        lastName: '',\n        email: '',\n        password: ''\n    };\n\n    handleChange = (e) => {\n        console.log(e);\n        this.setState({\n            [e.target.id]: e.target.value\n        });\n    }\n\n    handleSubmit = (e) => {\n        e.preventDefault();\n        // console.log(this.state);\n        this.props.signUp(this.state);\n    }\n\n    render() {\n        const { auth, authError } = this.props;\n        if(auth.uid) return <Redirect to='/' />;\n\n        return (\n            <div className=\"container\">\n                <form onSubmit={ this.handleSubmit } className=\"white\">\n                    <h5 className=\"grey-text text-darken-3\">Sign Up</h5>\n                    <div className=\"input-field\">\n                        <label htmlFor=\"firstName\">First Name</label>\n                        <input type=\"text\" id=\"firstName\" onChange={ this.handleChange } />\n                    </div>\n                    <div className=\"input-field\">\n                        <label htmlFor=\"lastName\">Last Name</label>\n                        <input type=\"text\" id=\"lastName\" onChange={ this.handleChange } />\n                    </div>\n                    <br />\n                    <div className=\"input-field\">\n                        <label htmlFor=\"email\">Email</label>\n                        <input type=\"email\" id=\"email\" autoComplete=\"email\" onChange={ this.handleChange } />\n                    </div>\n                    <div className=\"input-field\">\n                        <label htmlFor=\"password\">Password</label>\n                        <input type=\"password\" id=\"password\" autoComplete=\"current-password\" onChange={ this.handleChange } />\n                    </div>\n                    <div className=\"input-field\">\n                        <button className=\"btn pink lighten-1 z-depth-1 waves-effect waves-light\">\n                            Sign Up\n                        </button>\n                        <div className=\"red-text center\">\n                            { authError ? <p>{ authError }</p> : null }\n                        </div>\n                    </div>\n                </form>\n            </div>\n        );\n    }\n}\n\nconst mapStateToProps = (state) => {\n    return {\n        auth: state.firebase.auth,\n        authError: state.auth.authError\n    };\n};\n\nconst mapDispatchToProps = (dispatch) => {\n    return {\n        signUp: (newUser) => dispatch(signUp(newUser))\n    };\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(SignUp);\n","import React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport { createProject } from '../../store/actions/projectActions';\nimport { Redirect } from 'react-router-dom';\nclass CreateProject extends Component {\n    state = {\n        title: '',\n        content: ''\n    };\n\n    handleChange = (e) => {\n        console.log(e);\n        this.setState({\n            [e.target.id]: e.target.value\n        });\n    }\n\n    handleSubmit = (e) => {\n        e.preventDefault();\n        // console.log(this.state);\n        this.props.createProject(this.state);\n        this.props.history.push('/');\n    }\n\n    render() {\n        const { auth } = this.props;\n        if(!auth.uid) return <Redirect to='/signin' />;\n        return (\n            <div className=\"container\">  \n                <form onSubmit={ this.handleSubmit } className=\"white\">\n                    <h5 className=\"grey-text text-darken-3\">Create Project</h5>\n                    <div className=\"input-field\">\n                        <label htmlFor=\"title\">Title</label>\n                        <input type=\"text\" id=\"title\" onChange={ this.handleChange } />\n                    </div>\n                    <div className=\"input-field\">\n                        <label htmlFor=\"content\">Project Content</label>\n                        <textarea id=\"content\" className=\"materialize-textarea\" onChange={ this.handleChange } />\n                    </div>\n                    <div className=\"input-field\">\n                        <button className=\"btn pink lighten-1 z-depth-1 btn waves-effect waves-light\">\n                            CREATE\n                        </button>\n                    </div>\n                </form>\n            </div>\n        );\n    }\n}\n\nconst mapStateToProps = (state) => {\n    return {\n        auth: state.firebase.auth\n    };\n}\n\nconst mapDispatchToProps = (dispatch) => {\n    return {\n        createProject: (project) => dispatch(createProject(project))\n    }\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(CreateProject);\n","export const createProject = (project) => {\n    return (dispatch, getState, { getFirebase, getFirestore }) => {\n        // make async call to database\n        const firestore = getFirestore();\n        const profile = getState().firebase.profile;\n        const authorId = getState().firebase.auth.uid;\n        firestore.collection('projects').add({\n            ...project, // spread operator in lieu of individual properties\n            authorFirstName: profile.firstName,\n            authorLastName: profile.lastName,\n            authorId: authorId,\n            createdAt: new Date()\n        }).then(()=> {\n            dispatch({ type: 'CREATE_PROJECT', project });\n        }).catch((err) => {\n            // console.log(err);\n            dispatch({ type: 'CREATE_PROJECT_ERROR', err });\n        });\n    };\n};\n","import React, { Component } from 'react';\nimport { BrowserRouter, Switch, Route } from 'react-router-dom';\nimport Navbar from './components/layout/Navbar';\nimport Dashboard from './components/dashboard/Dashboard';\nimport ProjectDetails from './components/projects/ProjectDetails';\nimport SignIn from './components/auth/SignIn';\nimport SignUp from './components/auth/SignUp';\nimport CreateProject from './components/projects/CreateProject';\n\n\nclass App extends Component {\n  render() {\n    return (\n      <BrowserRouter>\n        \n        <div className=\"App\">\n          <Navbar />\n\n          <Switch>\n            <Route exact path='/' component={ Dashboard } />\n            <Route path='/project/:id' component={ ProjectDetails } />\n            <Route path='/signin' component={ SignIn } />\n            <Route path='/signup' component={ SignUp } />\n            <Route path='/create' component={ CreateProject } />\n          </Switch>\n        </div>\n\n      </BrowserRouter>\n    );\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read http://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","const initState = {\n    authError: null\n};\n\nconst authReducer = (state = initState, action) => {\n    switch(action.type) {\n        case 'LOGIN_ERROR':\n            console.log('error logging in');\n            return {\n                ...state,\n                authError: 'login failed'\n            };\n        case 'LOGIN_SUCCESS':\n            console.log('login success');\n            return {\n                ...state,\n                authError: null\n            };\n        case 'SIGNOUT_SUCCESS':\n            console.log('signout success');\n            return {\n                ...state,\n                authError: null\n            };\n        case 'SIGNUP_SUCCESS':\n            console.log('signup success');\n            return {\n                ...state,\n                authError: null\n            };\n        case 'SIGNUP_ERROR':\n            console.log('signup error');\n            return {\n                ...state,\n                authError: action.err.message\n            };\n        default: \n            return state;\n    }\n\n};\n\nexport default authReducer;\n","const initState = {\n    projects: [\n        {id:'1', title: 'Pick a Venue', content: 'Venues Explored: The Inn of the Seventh Ray'},        \n        {id:'2', title: 'Choose a Cake', content: 'Cakes we Like: Naked Cake with Flowers on Top'},       \n        {id:'3', title: 'Pick Music', content: 'Big Sean\\'s: I don\\'t Give a Fuck'}        \n    ]\n};\n\nconst projectReducer = (state = initState, action) => {\n    switch(action.type) {\n        case 'CREATE_PROJECT':\n            console.log('created project: ', action.project);\n            return state;\n        case 'CREATE_PROJECT_ERROR':\n            console.log('error creating project: ',action.err);\n            return state;\n        default: \n            return state;   \n    }\n};\n\nexport default projectReducer;\n","import authReducer from './authReducer';\nimport projectReducer from './projectReducer';\nimport { combineReducers } from 'redux';\nimport { firestoreReducer } from 'redux-firestore';\nimport { firebaseReducer } from 'react-redux-firebase';\n\nconst rootReducer = combineReducers({\n    auth: authReducer,\n    project: projectReducer,\n    firestore: firestoreReducer,\n    firebase: firebaseReducer\n});\n\nexport default rootReducer;\n","import firebase from 'firebase/app';\nimport 'firebase/firestore';\nimport 'firebase/auth';\n// Initialize Firebase\nconst config = {\n    apiKey: \"AIzaSyByYb5yDYO93RUAPXWnXiHCDOMaqvWfwi8\",\n    authDomain: \"irms-luigi-wedding-book.firebaseapp.com\",\n    databaseURL: \"https://irms-luigi-wedding-book.firebaseio.com\",\n    projectId: \"irms-luigi-wedding-book\",\n    storageBucket: \"irms-luigi-wedding-book.appspot.com\",\n    messagingSenderId: \"400656624086\"\n};\n\nfirebase.initializeApp(config);\nfirebase.firestore().settings({ timestampsInSnapshots: true });\n\nexport default firebase;","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\nimport { createStore, applyMiddleware, compose } from 'redux';\nimport rootReducer from './store/reducers/rootReducer';\nimport { Provider } from 'react-redux';\nimport thunk from 'redux-thunk';\nimport { reduxFirestore, getFirestore } from 'redux-firestore';\nimport { reactReduxFirebase, getFirebase } from 'react-redux-firebase';\nimport fbConfig from './config/fbConfig';\n\nconst store = createStore(rootReducer, \n    compose(\n        applyMiddleware(thunk.withExtraArgument({ getFirebase, getFirestore })),\n        reduxFirestore(fbConfig),\n        reactReduxFirebase(fbConfig, { useFirestoreForProfile: true, userProfile: 'users', attachAuthIsReady: true, timestampsInSnapshots: true })\n        )\n    );\nstore.firebaseAuthIsReady.then( () => {\n    ReactDOM.render(<Provider store={ store }><App /></Provider>, document.getElementById('root'))\n});\n\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: http://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}